{"version":3,"sources":["components/Product/Product.js","App.js","reportWebVitals.js","index.js"],"names":["currencyOptions","minimumFractionDigits","maximumFractionDigits","products","emoji","name","price","Product","useState","cart","setCart","total","setTotal","className","length","toLocaleString","undefined","map","product","role","aria-label","onClick","current","add","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAGMA,G,MAAkB,CACtBC,sBAAuB,EACvBC,sBAAuB,IAGnBC,EAAW,CACf,CACEC,MAAO,eACPC,KAAM,YACNC,MAAO,GAET,CACEF,MAAO,eACPC,KAAM,SACNC,MAAO,KAET,CACEF,MAAO,eACPC,KAAM,aACNC,MAAO,IAII,SAASC,IAAW,IAAD,EACRC,mBAAS,IADD,mBACzBC,EADyB,KACnBC,EADmB,OAENF,mBAAS,GAFH,mBAEzBG,EAFyB,KAElBC,EAFkB,KAahC,OACE,sBAAKC,UAAU,UAAf,UACE,kDACkBJ,EAAKK,OADvB,mBAGA,0CAbKH,EAAMI,oBAAeC,EAAWhB,MAcnC,8BACCG,EAASc,KAAI,SAAAC,GAAO,OACnB,gCACE,qBAAKL,UAAU,UAAf,SACE,sBAAMM,KAAK,MAAMC,aAAYF,EAAQb,KAArC,SAA4Ca,EAAQd,UAEtD,wBAAQiB,QAAS,kBAjB3B,SAAaH,GACXR,GAAQ,SAAAY,GAAO,4BAAQA,GAAR,CAAiBJ,EAAQb,UACxCO,GAAS,SAAAU,GAAO,OAAIA,EAAUJ,EAAQZ,SAePiB,CAAIL,IAA3B,iBACA,8CALQA,EAAQb,cCtCbmB,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9f32b41e.chunk.js","sourcesContent":["import React, { useReducer, useState } from 'react';\nimport './Product.css';\n\nconst currencyOptions = {\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n}\n\nconst products = [\n  {\n    emoji: '🍦',\n    name: 'ice cream',\n    price: 5\n  },\n  {\n    emoji: '🍩',\n    name: 'donuts',\n    price: 2.5,\n  },\n  {\n    emoji: '🍉',\n    name: 'watermelon',\n    price: 4\n  }\n];\n\nexport default function Product() {\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  function getTotal() {\n    return total.toLocaleString(undefined, currencyOptions)\n  }\n\n  function add(product) {\n    setCart(current => [...current, product.name]);\n    setTotal(current => current + product.price);\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <div>\n        Shopping Cart: {cart.length} total items.\n      </div>\n      <div>Total: {getTotal(total)}</div>\n        <div>\n        {products.map(product => (\n          <div key={product.name}>\n            <div className=\"product\">\n              <span role=\"img\" aria-label={product.name}>{product.emoji}</span>\n            </div>\n            <button onClick={() => add(product)}>Add</button>\n            <button>Remove</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}","import './App.css';\nimport Product from './components/Product/Product';\n\nfunction App() {\n  return (\n    <Product/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}